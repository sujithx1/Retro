
<!DOCTYPE html>
<html class="no-js" lang="en">

<head>
    <meta charset="utf-8">
    <title>Verify</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/users/assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link rel="stylesheet" href="/users/assets/css/main.css?v=3.4">
</head>
<body>
    

<section class="pt-150 pb-150">
    <div class="container h-100">
        <div class="row align-items-center justify-content-center h-100">
            <div class="col-lg-5">
                <div class="login_wrap widget-taber-content p-30 background-white border-radius-10 mb-md-5 mb-lg-0 mb-sm-5">
                    <div class="padding_eight_all bg-white">
                        <div class="heading_s1">
                            <h3 class="mb-30">Verification</h3>
                        </div>
                        <form method="post" id="verificationForm"  onsubmit="validateAndSubmit(event)">
                            <div>
                           <% if(typeof msg != 'undefined') {%>
                            <p class="text-success" id="error-message"><%= msg%></p>
                            <%}%>

                            </div>
                            <div class="form-group">
                                <input type="text" id="otp" required="" name="verify" placeholder="enter OTP">
                                <div id="error-otp" class="text-danger"></div>
                            </div>
                            
                            <div class="login_footer form-group">
                                <div class="chek-form">
                                  
                            <div class="form-group">
                                <button type="submit" class="btn btn-fill-out btn-block hover-up"   name="verify">Verify</button>
                            </div>
                            <div class="form-group">
                            <button id="resend"class="disabled" >Resend OTP</button>
                             <span id="timer"></span></div>
                        </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    
    </div>
</section>


  <!-- Vendor JS-->
  <script src="/users/assets/js/vendor/modernizr-3.6.0.min.js"></script>
  <script src="/users/assets/js/vendor/jquery-3.6.0.min.js"></script>
  <script src="/users/assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
  <script src="/users/assets/js/vendor/bootstrap.bundle.min.js"></script>
  <script src="/users/assets/js/plugins/slick.js"></script>
  <script src="/users/assets/js/plugins/jquery.syotimer.min.js"></script>
  <script src="/users/assets/js/plugins/wow.js"></script>
  <script src="/users/assets/js/plugins/jquery-ui.js"></script>
  <script src="/users/assets/js/plugins/perfect-scrollbar.js"></script>
  <script src="/users/assets/js/plugins/magnific-popup.js"></script>
  <script src="/users/assets/js/plugins/select2.min.js"></script>
  <script src="/users/assets/js/plugins/waypoints.js"></script>
  <script src="/users/assets/js/plugins/counterup.js"></script>
  <script src="/users/assets/js/plugins/jquery.countdown.min.js"></script>
  <script src="/users/assets/js/plugins/images-loaded.js"></script>
  <script src="/users/assets/js/plugins/isotope.js"></script>
  <script src="/users/assets/js/plugins/scrollup.js"></script>
  <script src="/users/assets/js/plugins/jquery.vticker-min.js"></script>
  <script src="/users/assets/js/plugins/jquery.theia.sticky.js"></script>
  <!-- Template  JS -->
  <script src="./users/assets/js/main.js?v=3.4"></script>
  
  <script>
function validateAndSubmit(event) {
    event.preventDefault(); // Prevent default form submission
    var otpInput = document.getElementById('otp').value;
    var otpError = document.getElementById('error-otp');

    // Front-end validation
    if (otpInput.trim() === '') {
        otpError.innerHTML = 'Please enter OTP';
        return; // Do not submit form if validation fails
    } else if (otpInput.trim().length !== 4) {
        otpError.innerHTML = "OTP must be exactly 4 characters long";
        return; // Do not submit form if validation fails
    } else if(isNaN(otpInput)){
        otpError.innerHTML = 'Otp Must Be a Number'; // Clear any previous error message
    }else
    {
        otpError.innerHTML=""
    }

    // If front-end validation is successful, submit the form
    if (!otpError.innerHTML) {
        document.getElementById('verificationForm').submit();
    }
}

//     // Function to handle resend OTP
// function resendOTP() {
//     // Send a request to your server to resend the OTP
//     fetch('/resend-otp', {
//         method: 'POST',
//         headers: {
//             'Content-Type': 'application/json'
//         },  
        
//         // Optionally, you can include data in the request body if needed
//         // body: JSON.stringify({ /* data */ })
//     })
//     .then(response => {
//         if (response.json()) {
//             console.log('Resend request processed successfully');
//             startTimer(); // Start the timer again after resending OTP
//         } else {
//             console.error('Failed to process resend request:', response.statusText);
//             // Optionally, display an error message to the user
//         }
//     })
//     .then(data=>{console.log('fetch response :',data);})
//     .catch(error => {
//         console.error('Error processing resend request:', error.message);
//         // Optionally, display an error message to the user
//     });
// }

let resendLink = document.getElementById('resend');

// Function to start the one-minute timer
function startTimer() {
    let seconds = getRemainingSeconds() || 60; // Get remaining seconds or default to 60
    const timerElement = document.getElementById('timer');

    
    // Disable the resend link during the countdown
    // console.log(resendLink.classList);
    resendLink.style.display='none'
    // console.log(resendLink.classList);

    const timerInterval = setInterval(() => {
        seconds--;
        if (seconds >= 0) {
            timerElement.textContent = `resend  ${seconds} seconds`;
            setRemainingSeconds(seconds); // Store remaining seconds in local storage
        } else {
            clearInterval(timerInterval);
            timerElement.textContent = '';
            // Re-enable the resend link after the countdown finishes
            resendLink.style.display='block'
            clearRemainingSeconds(); // Clear remaining seconds from local storage
        }
    }, 1000);
}

// Function to get remaining seconds from local storage
function getRemainingSeconds() {
    return localStorage.getItem('remainingSeconds');
}

// Function to set remaining seconds in local storage
function setRemainingSeconds(seconds) {
    localStorage.setItem('remainingSeconds', seconds);
}

// Function to clear remaining seconds from local storage
function clearRemainingSeconds() {
    localStorage.removeItem('remainingSeconds');
}

// Function to handle resend OTP
function resendOTP() {

    clearError(); // Clear any existing error messages
    // Send a request to your server to resend the OTP
    fetch('/resend-otp', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },  
        // Optionally, you can include data in the request body if needed
        // body: JSON.stringify({ /* data */ })
    })
    .then(response => {
        if (response.ok) {
            console.log('Resend request processed successfully');
            startTimer(); // Start the timer again after resending OTP
        } else {
            console.error('Failed to process resend request:', response.statusText);
            // Optionally, display an error message to the user
        }
    })
    .catch(error => {
        console.error('Error processing resend request:', error.message);
        // Optionally, display an error message to the user
    });
}

// Add event listener to the "Resend OTP" link
// const resendLink = document.getElementById('resend');
resendLink.addEventListener('click', function(event) {
    console.log('otp function running');
    event.preventDefault(); // Prevent the default action of the link
    resendOTP(); // Call the function to resend OTP
});

// Function to clear any existing error messages
function clearError() {
    const errorElement = document.getElementById('error-message');
    errorElement.textContent = '';
}

// Start the timer when the page loads
startTimer();

  </script>
      
  </body>